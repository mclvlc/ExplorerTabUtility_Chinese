<UserControl x:Class="ExplorerTabUtility.UI.Views.Controls.SystemTrayIcon"
             xmlns:managers="clr-namespace:ExplorerTabUtility.Managers"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:tb="http://www.hardcodet.net/taskbar"
             x:Name="ThisObject">

    <tb:TaskbarIcon x:Name="TrayIcon"
                    Visibility="Visible"
                    DataContext="{Binding ElementName=ThisObject}"
                    TrayMouseDoubleClick="OnNotifyIconDoubleClick">

        <tb:TaskbarIcon.ContextMenu>
            <ContextMenu>
                <!-- 键盘钩子 -->
                <MenuItem Name="KeyboardHookMenu"
                          IsCheckable="False"
                          IsChecked="{Binding Source={x:Static managers:SettingsManager.IsKeyboardHookActive}, Mode=OneTime}"
                          ToolTip="启用或禁用键盘快捷键">
                    <MenuItem.Header>
                        <Grid>
                            <CheckBox Command="{Binding RelativeSource={RelativeSource AncestorType=MenuItem}, Path=Command}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=MenuItem}, Path=CommandParameter}"
                                      Background="Transparent"
                                      Opacity="0"
                                      Margin="-35,0,0,0"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch" />
                            <TextBlock Text="键盘钩子" Background="Transparent" IsHitTestVisible="False" VerticalAlignment="Center" />
                        </Grid>
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <TextBlock Text="&#xE8AC;" FontSize="14" />
                    </MenuItem.Icon>
                    <!-- 键盘配置子菜单（在代码后台实现） -->
                </MenuItem>

                <!-- 鼠标钩子 -->
                <MenuItem Name="MouseHookMenu"
                          IsCheckable="False"
                          IsChecked="{Binding Source={x:Static managers:SettingsManager.IsMouseHookActive}, Mode=OneTime}"
                          ToolTip="启用或禁用鼠标快捷键">
                    <MenuItem.Header>
                        <Grid>
                            <CheckBox Command="{Binding RelativeSource={RelativeSource AncestorType=MenuItem}, Path=Command}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=MenuItem}, Path=CommandParameter}"
                                      Background="Transparent"
                                      Opacity="0"
                                      Margin="-35,0,0,0"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch" />
                            <TextBlock Text="鼠标钩子" Background="Transparent" IsHitTestVisible="False" VerticalAlignment="Center" />
                        </Grid>
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <TextBlock Text="&#xE962;" FontSize="14" />
                    </MenuItem.Icon>
                    <!-- 鼠标配置子菜单（在代码后台实现） -->
                </MenuItem>

                <!-- 窗口钩子 -->
                <MenuItem Header="窗口钩子"
                          Name="WindowHook"
                          StaysOpenOnClick="True"
                          IsCheckable="True"
                          IsChecked="{Binding Source={x:Static managers:SettingsManager.IsWindowHookActive}, Mode=OneTime}"
                          ToolTip="切换是否自动将新资源管理器窗口重定向到标签页">
                    <MenuItem.Icon>
                        <TextBlock Text="&#xE8A7;" FontSize="14" />
                    </MenuItem.Icon>
                </MenuItem>

                <!-- 重用标签页 -->
                <MenuItem Header="重用标签页"
                          Name="ReuseTabs"
                          StaysOpenOnClick="True"
                          IsCheckable="True"
                          IsChecked="{Binding Source={x:Static managers:SettingsManager.ReuseTabs}, Mode=OneTime}"
                          ToolTip="启用后，导航到现有标签页而不是打开重复标签页">
                    <MenuItem.Icon>
                        <TextBlock Text="&#xE8EE;" FontSize="14" />
                    </MenuItem.Icon>
                </MenuItem>

                <Separator />

                <!-- 开机启动 -->
                <MenuItem Header="开机启动"
                          Name="AddToStartup"
                          StaysOpenOnClick="True"
                          IsCheckable="True"
                          IsChecked="{Binding Source={x:Static managers:RegistryManager.IsStartupEnabled}, Mode=OneTime}"
                          ToolTip="Windows启动时自动运行资源管理器标签页工具">
                    <MenuItem.Icon>
                        <TextBlock Text="&#xE7F4;" FontSize="14" />
                    </MenuItem.Icon>
                </MenuItem>

                <!-- 检查更新 -->
                <MenuItem x:Name="CheckForUpdates"
                          Header="检查更新"
                          ToolTip="检查是否有新版本的资源管理器标签页工具可用">
                    <MenuItem.Icon>
                        <TextBlock Text="&#xE896;" FontSize="14" />
                    </MenuItem.Icon>
                </MenuItem>

                <!-- 设置 -->
                <MenuItem x:Name="OpenSettings"
                          Header="设置"
                          ToolTip="打开设置窗口以配置应用程序">
                    <MenuItem.Icon>
                        <TextBlock Text="&#xE713;" FontSize="14" />
                    </MenuItem.Icon>
                </MenuItem>

                <Separator />

                <!-- 退出 -->
                <MenuItem x:Name="ExitApplication"
                          Header="退出"
                          ToolTip="关闭资源管理器标签页工具并停止所有钩子">
                    <MenuItem.Icon>
                        <TextBlock Text="&#xE7E8;" FontSize="14" Foreground="{StaticResource DangerBrush}" />
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>
        </tb:TaskbarIcon.ContextMenu>
    </tb:TaskbarIcon>

</UserControl>